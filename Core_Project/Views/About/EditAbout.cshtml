@model EntityLayer.Concrete.About
@{
    ViewData["Title"] = "EditAbout";
    Layout = "~/Views/Shared/_NewAdminLayout.cshtml";
}

<h1 class="text-center">Edit About</h1>



@using (Html.BeginForm("EditAbout", "About", FormMethod.Post))
{
    @Html.HiddenFor(x => x.AboutID)
    <br />
    @Html.Label("Title")
    @Html.TextBoxFor(x => x.Title, new { @class = "form-control text-white" })
    @Html.ValidationMessageFor(x => x.Title, null, new { @class = "text-danger custom-class" })

    <br />
    <label>Description</label>
    @Html.TextBoxFor(x => x.Description, new { @class = "form-control text-white" })
    @Html.ValidationMessageFor(x => x.Description, null, new { @class = "text-danger custom-class" })

    <br />
    <label>Age</label>
    @Html.TextBoxFor(x => x.Age, new { @class = "form-control text-white" })
    @Html.ValidationMessageFor(x => x.Age, null, new { @class = "text-danger custom-class" })

    <br />

    <label>Mail</label>
    @Html.TextBoxFor(x => x.Mail, new { @class = "form-control text-white" })
    @Html.ValidationMessageFor(x => x.Mail, null, new { @class = "text-danger custom-class" })

    <br />
    <label>Phone</label>
    @Html.TextBoxFor(x => x.Phone, new { @class = "form-control text-white" })
    <br />
    <label>Adress</label>
    @Html.TextBoxFor(x => x.Adress, new { @class = "form-control text-white" })
    <br />
    <label>Image URL</label>
    @Html.TextBoxFor(x => x.ImageUrl, new { @class = "form-control text-white" })
    <br />
    <button class="btn btn-success">Update</button>


}

